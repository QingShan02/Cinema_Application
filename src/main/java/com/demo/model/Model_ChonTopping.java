/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.raven.model;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author Daokh
 */
public class Model_ChonTopping extends javax.swing.JPanel {

    /**
     * Creates new form Model_ChonTopping
     */
    public Model_ChonTopping() {
        initComponents();

    }
    Topping tp;

    public Model_ChonTopping(Topping tp) {
        initComponents();
        this.tp = tp;
        chkTenTopping.setText(tp.getTenTopping());
        lblHinh.setIcon(resizeImage("src/main/resources/topping/" + tp.getHinh()));
        snSoLuong.setEnabled(chkTenTopping.isSelected());
        lblGia.setText(tp.getGia()+"");
        snSoLuong.setValue(0);
    }

    public ImageIcon resizeImage(String path) {
        ImageIcon ii = new ImageIcon(path);
        ImageIcon imageIcon = new ImageIcon(ii.getImage().getScaledInstance(50, 50, java.awt.Image.SCALE_SMOOTH));
        return imageIcon;
    }

    public static Object readObj(String path) throws FileNotFoundException, IOException, ClassNotFoundException {

        ObjectInputStream ois = new ObjectInputStream(new FileInputStream(path));
        if (ois == null) {
            return null;
        }
        return ois.readObject();
    }

    public static void writeObj(String path, Object data) throws FileNotFoundException, IOException {
        try (
                 FileOutputStream fos = new FileOutputStream(path);  ObjectOutputStream oos = new ObjectOutputStream(fos);) {
            oos.writeObject(data);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblHinh = new javax.swing.JLabel();
        chkTenTopping = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        snSoLuong = new javax.swing.JSpinner();
        lblGia = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        jPanel1.add(lblHinh);

        chkTenTopping.setText("jCheckBox1");
        chkTenTopping.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkTenToppingItemStateChanged(evt);
            }
        });
        jPanel1.add(chkTenTopping);

        jLabel1.setText("Số lượng");
        jPanel1.add(jLabel1);

        snSoLuong.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                snSoLuongStateChanged(evt);
            }
        });
        jPanel1.add(snSoLuong);

        lblGia.setText("jLabel2");
        jPanel1.add(lblGia);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chkTenToppingItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkTenToppingItemStateChanged
        // TODO add your handling code here:
        snSoLuong.setEnabled(chkTenTopping.isSelected());

    }//GEN-LAST:event_chkTenToppingItemStateChanged

    private void snSoLuongStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_snSoLuongStateChanged
        // TODO add your handling code here:
        if (snSoLuong.isEnabled()) {
            try {
                ThanhToan tt = (ThanhToan) readObj("temp.txt");

//                    tt.setMaTopping(tp.getMaTopping());
//                    tt.setSoLuongMua((int) snSoLuong.getValue());
                List<Topping> list = new ArrayList<>();
                int k = 0;
                if (tt.getListTopping() != null) {
                    list = tt.getListTopping();
                    for (int i = 0; i < list.size(); i++) {

                        if (list.get(i).getMaTopping().equalsIgnoreCase(tp.getMaTopping())) {
                            list.set(i, new Topping(tp.getMaTopping(), tp.getTenTopping(), tp.getGia(), (int) snSoLuong.getValue()));
                            k++;
                            break;
                        }
                    }
                    if (k == 0) {
                        list.add(new Topping(tp.getMaTopping(), tp.getTenTopping(), tp.getGia(), (int) snSoLuong.getValue()));
                    }
                    k = 0;

                } else {
                    list = new ArrayList<>();
                    list.add(new Topping(tp.getMaTopping(), tp.getTenTopping(), tp.getGia(), (int) snSoLuong.getValue()));
                }
                System.out.println(list.size());
                System.out.println(snSoLuong.getValue());
                tt.setListTopping(list);

                writeObj("temp.txt", tt);
            } catch (IOException ex) {
                Logger.getLogger(Model_ChonTopping.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Model_ChonTopping.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_snSoLuongStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkTenTopping;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblGia;
    private javax.swing.JLabel lblHinh;
    private javax.swing.JSpinner snSoLuong;
    // End of variables declaration//GEN-END:variables
}
